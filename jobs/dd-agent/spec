---
name: dd-agent
description: Datadog Agent
packages:
- dd-agent
templates:
  data/properties.sh.erb: data/properties.sh
  config/datadog.conf.erb: config/datadog.conf
  config/datadog.yaml.erb: config/datadog.yaml
  config/confd.sh.erb: config/confd.sh
  bin/process_agent_ctl: bin/process_agent_ctl
  bin/trace_agent_ctl: bin/trace_agent_ctl
  bin/pre-start: bin/pre-start
  bin/agent_ctl: bin/agent_ctl

properties:
  dd.url:
    description: The host of the Datadog intake server to send Agent data to
  dd.proxy:
    description: Proxy settings to connect to the Internet
    example:
      host: proxy
      port: 8080
      user: user
      password: pass
  dd.proxy.http:
    description: The proxy for http endpoints
  dd.proxy.https:
    description: The proxy for https endpoints
  dd.proxy.no_proxy:
    description: Domains that the agent proxy should skip
  dd.skip_ssl_validation:
    default: no
    description: Skip SSL validation for the Datadog url
  dd.api_key:
    description: Datadog API key
  dd.additional_api_url_1:
    description: "Additional Endpoint URL 1 for datadog"
    default: "https://app.datadoghq.com/api/v1/series"
  dd.additional_api_key_1:
    description: "The datadog API key to use while submitting requests for additional endpoint url 1"
  dd.additional_api_url_2:
    description: "Additional Endpoint URL 2 for datadog"
    default: "https://app.datadoghq.com/api/v1/series"
  dd.additional_api_key_2:
    description: "The datadog API key to use while submitting requests for additional endpoint url 2"
  dd.additional_api_url_3:
    description: "Additional Endpoint URL 3 for datadog"
    default: "https://app.datadoghq.com/api/v1/series"
  dd.additional_api_key_3:
    description: "The datadog API key to use while submitting requests for additional endpoint url 3"
  dd.additional_api_url_4:
    description: "Additional Endpoint URL 4 for datadog"
    default: "https://app.datadoghq.com/api/v1/series"
  dd.additional_api_key_4:
    description: "The datadog API key to use while submitting requests for additional endpoint url 4"
  dd.additional_api_url_5:
    description: "Additional Endpoint URL 5 for datadog"
    default: "https://app.datadoghq.com/api/v1/series"
  dd.additional_api_key_5:
    description: "The datadog API key to use while submitting requests for additional endpoint url 5"
  dd.hostname:
    description: Force the hostname to whatever you want. Default is autogenerated
  dd.use_uuid_hostname:
    description: By default we use a friendly hostname, this might cause problems with some setups. Set this to use the UUID instead. (In an environment where there are multiple hosts of the same type on different deployments or in different foundries, this will be necessary.) If dd.hostname is set, it will take precedence over the uuid hostname.
  dd.friendly_hostname:
    default: true
    description: "Use a friendly hostname. If this is enabled, along with the UUID option, uuid will take precedence."
  dd.tags:
    default: []
    description: List of tags which will be applied to the data sent from this agent
  dd.bosh_tags:
    default: yes
    description: Enable autogenerated bosh tags
  dd.bosh_tags_prefix:
    default: "bosh_"
    description: Prefix for autogenerated bosh tags
  dd.create_dd_check_tags:
    default: no
    description: Add dd_check:checkname tag per running check
  dd.collect_ec2_tags:
    default: no
    description: Collect AWS EC2 custom tags as agent tags (requires an IAM role associated with the instance)
  dd.collect_security_groups:
    default: no
    description: Incorporate security-groups into tags collected from AWS EC2
  dd.gce_updated_hostname:
    default: yes
    description: "Use unique hostname for GCE hosts, see http://dtdg.co/1eAynZk"
  dd.listen_port:
    default: 17123
    description: Change port the Agent is listening to
  dd.use_graphite:
    default: no
    description: Enable a graphite endpoint
  dd.graphite_listen_port:
    default: 17124
    description: Start a graphite listener on this port
  dd.non_local_traffic:
    default: no
    description: Allow non-local traffic to this Agent, required when using it as a proxy for other agents
  dd.check_timings:
    default: no
    description: The collector will capture a metric for check run times
  dd.exclude_process_args:
    default: no
    description: Remove the 'ww' flag from ps catching the arguments of processes
  dd.histogram_aggregates:
    default: ["max", "median", "avg", "count"]
    description: List of histogram aggregates functions
  dd.histogram_percentiles:
    default: ["0.95"]
    description: List of histogram percentiles
  dd.use_jmxfetch:
    default: no
    description: Should the jmxfetch agent be started
  dd.use_dogstatsd:
    default: no
    description: Should the dogstatsd agent be started for statsd metrics collection
  dd.dogstatsd_port:
    default: 18125
    description: Statsd listening port
  dd.dogstatsd_target:
    description: By default dogstatsd will post aggregate metrics to the Agent, but you can define a different endpoint here
  dd.statsd_forward_host:
    description: Forward packets received by the dogstatsd server to another statsd server
  dd.statsd_forward_port:
    default: 8125
    description: Forward packets received by the dogstatsd server to another statsd server port
  dd.statsd_metric_namespace:
    description: Define a namespace for statsd metrics, metric.name will instead become namespace.metric.name
  dd.utf8_decoding:
    default: no
    description: Dogstatsd supports plain ASCII packets, this enables support for UTF8 metric names
  dd.use_ganglia:
    default: no
    description: Enable Ganglia support for collecting metrics
  dd.ganglia_host:
    default: "127.0.0.1"
    description: Ganglia host where gmetad is running
  dd.ganglia_port:
    default: 8651
    description: Ganglia port where gmetad is running
  dd.dogstreams:
    description: List of logs to parse and optionally custom parsers to use
    example: ["/path/to/log1:/path/to/my/parsers_module.py:custom_parser", "/path/to/log2"]
  dd.custom_emitters:
    description: List of emitters to be used in addition to the standard one
    example: ["/usr/local/my-code/emitters/rabbitmq.py:RabbitMQEmitter"]
  dd.log_level:
    default: INFO
    description: Logging level
  dd.generate_processes:
    default: yes
    description: Automatically generate process monitoring integration, process.yaml
  dd.generate_monit_processes:
    default: yes
    description: Add monit processes to process check
  dd.generate_system_processes:
    default: yes
    description: Add basic system processes to process check
  dd.generate_ntp_config:
    default: yes
    description: Generate NTP monitoring ntp.yaml
  dd.generate_ntp_config_host:
    default: "0.ubuntu.pool.ntp.org"
    description: NTP host
  dd.generate_ntp_config_offset_threshold:
    default: 60
    description: Max offset threshold in seconds
  dd.generate_ntp_config_min_collection_interval:
    default: 300
    description: Metrics collection interval
  dd.generate_network_config:
    default: yes
    description: Automatically generate network monitoring integration, network.yaml
  dd.generate_network_config_connection_state:
    default: yes
    description: Report metrics including the state of the nics
  dd.process_agent_enabled:
    default: no
    description: Enable the process agent.
  dd.trace_agent_enabled:
    default: no
    description: Enable the trace agent.
  dd.generate_network_config_excluded_interfaces:
    default: ["lo", "lo0"]
    description: List of the network interfaces to exclude from reporting metrics
  dd.generate_disk_config:
    default: yes
    description: Generate disk configuration, disk.yaml
  dd.generate_disk_config_tag_by_filesystem:
    default: yes
    description: Add tags to mountpoints by filesystem type
  dd.generate_disk_config_all_partitions:
    default: yes
    description: Include all partitions in the system
  dd.enable_gohai:
    default: yes
    description: Enable gohai metadata collection (default is yes)
  dd.integrations:
    default: {}
    description: Agent integration configuration. Each key will have ".yaml" appended to it and the value dumped a file
  dd.expvar_port:
    default: 15000
    description: The port that the agent reports expvar metrics over. (Set to a different port if there's a collision)
  dd.cmd_port:
    default: 15001
    description: The port on which the IPC api listens. (Set to a different port if there's a collision)
  dd.check_runners:
    default: 1
    description: "The Agent runs workers in parallel to execute checks. By default the number of workers is set to 1. If set to 0 the agent will automatically determine the best number of runners needed based on the number of checks running. This would optimize the check collection time but may produce CPU spikes."
  dd.enable_metadata_collection:
    default: yes
    description: "Metadata collection should always be enabled, except if you are running several agents/dsd instances per host. In that case, only one agent should have it on. WARNING: disabling it on every agent will lead to display and billing issues"
  dd.log_format_json:
    default: no
    description: Set this option to "yes" to output logs in JSON format
  dd.forwarder_num_workers:
    default: 1
    description: "The number of workers used by the forwarder. Please note each worker will open an outbound HTTP connection towards Datadog's metrics intake at every flush."
  dd.agent_config:
    default: {}
    description: "Add any additional agent config options here. (Warning: any options you add here will override the options set previously.)"
  dd.ip_tag:
    default: true
    description: "Include the ip tag"
  dd.address_tag:
    default: true
    description: "Include the address tag"
  dd.site:
    description: "The site of the Datadog intake to send Agent data to. Defaults to 'datadoghq.com', set to 'datadoghq.eu' to send data to the EU site."
