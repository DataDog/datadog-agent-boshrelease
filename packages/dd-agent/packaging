#!/usr/bin/env bash

# Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2017-Present Datadog, Inc.

set -e -x

# Grab the latest versions that are in the directory
DD_AGENT_VERSION=7.32.4
JOB_NAME="dd-agent"
BOSH_PACKAGES_DIR=${BOSH_PACKAGES_DIR:-/var/vcap/packages}

KNOWN_DISTRIBUTION="(Debian|Ubuntu|RedHat|CentOS|openSUSE|Amazon|Arista|SUSE)"
DISTRIBUTION=$(lsb_release -d 2>/dev/null | grep -Eo $KNOWN_DISTRIBUTION  || grep -Eo $KNOWN_DISTRIBUTION /etc/issue 2>/dev/null || grep -Eo $KNOWN_DISTRIBUTION /etc/Eos-release 2>/dev/null || uname -s)

if [ -f /etc/debian_version -o "$DISTRIBUTION" == "Debian" -o "$DISTRIBUTION" == "Ubuntu" ]; then
    OS="Debian"
elif [ -f /etc/redhat-release -o "$DISTRIBUTION" == "RedHat" -o "$DISTRIBUTION" == "CentOS" -o "$DISTRIBUTION" == "Amazon" ]; then
    OS="RedHat"
else
    echo "this distribution is not supported by datadog"
    exit 1
fi

# Install shell helpers
echo "Adding shell helpers ..."
mkdir -p ${BOSH_INSTALL_TARGET}
cp -av helpers ${BOSH_INSTALL_TARGET}/

AGENT_INSTALL_TARGET=${BOSH_INSTALL_TARGET}/agent
mkdir -p ${AGENT_INSTALL_TARGET}/checks.d

DIST_DIR=${BOSH_INSTALL_TARGET}/bin/agent/dist

mkdir ./extracted-agent

echo "extracting package"
if [ $OS == "Debian" ]; then
  dpkg -x dd-agent/datadog-agent_${DD_AGENT_VERSION}-1_amd64.deb ./extracted-agent

  cp -R ./extracted-agent/opt/datadog-agent/* ${BOSH_INSTALL_TARGET}
  cp -R ./extracted-agent/etc/datadog-agent ${BOSH_INSTALL_TARGET}/etc
fi

if [ $OS == "RedHat" ]; then
  pushd ./extracted-agent
    rpm2cpio ../dd-agent/datadog-agent-${DD_AGENT_VERSION}-1.x86_64.rpm | cpio -idmv --no-absolute-filenames
  popd
  cp -R ./extracted-agent/opt/datadog-agent/* ${BOSH_INSTALL_TARGET}
  cp -R ./extracted-agent/etc/datadog-agent ${BOSH_INSTALL_TARGET}/etc
fi

mkdir -p $DIST_DIR/conf.d
cp -R ./extracted-agent/etc/datadog-agent/conf.d $DIST_DIR/conf.d

# Install custom checks
echo "Adding custom checks ..."
mkdir -p ${AGENT_INSTALL_TARGET}
cp -av checks.d ${AGENT_INSTALL_TARGET}/

echo "Setting up configuration ..."
pushd ${AGENT_INSTALL_TARGET}
  rm -rf conf.d datadog.conf
  # create the links to the configuration
  ln -s /var/vcap/jobs/$JOB_NAME/config/conf.d conf.d
  ln -s /var/vcap/jobs/$JOB_NAME/config/datadog.yaml datadog.yaml
popd
pushd ${DIST_DIR}
  rm -rf conf.d datadog.conf
  # create the links to the configuration
  ln -s /var/vcap/jobs/$JOB_NAME/config/datadog.yaml datadog.yaml

popd

echo "Fixing broken symbolic links"
broken_links="/embedded/bin/bzfgrep
/embedded/bin/bzcmp
/embedded/bin/bzless
/embedded/bin/bzegrep
/embedded/ssl/cert.pem
/embedded/bin/python
/embedded/bin/pip
/embedded/bin/2to3"

for link in $broken_links; do
  rm -f ${BOSH_INSTALL_TARGET}/${link}
done

pushd ${BOSH_INSTALL_TARGET}/embedded/bin
  ln -s bzgrep bzfgrep
  ln -s bzdiff bzcmp
  ln -s bzmore bzless
  ln -s bzgrep bzegrep
  ln -s python3 python
  ln -s pip3 pip
  ln -s 2to3-3.8 2to3
popd

pushd ${BOSH_INSTALL_TARGET}/embedded/ssl
  ln -s ./certs/cacert.pem cert.pem
popd


echo "Fixing pkg config settings ..."
pushd ${BOSH_INSTALL_TARGET}/embedded/lib/pkgconfig/
  OLD_PREFIX="prefix=/opt/datadog-agent/embedded"
  NEW_PREFIX="prefix=/var/vcap/jobs/$JOB_NAME/packages/$JOB_NAME/embedded"
  for file in $(ls); do
    if [ -f "${file}" -a ! -L "${file}" ]; then
      sed -i "s~${OLD_PREFIX}~${NEW_PREFIX}~" ${file}
    fi
  done
popd
