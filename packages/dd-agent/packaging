#!/usr/bin/env bash
set -e -x

# Grab the latest versions that are in the directory
DD_AGENT_VERSION=$(ls -r dd-agent/dd-agent-*.tar.gz | sed 's/.*\/dd-agent-\(.*\)\.tar\.gz$/\1/' | head -1)
BOSH_PACKAGES_DIR=${BOSH_PACKAGES_DIR:-/var/vcap/packages}

# Build gohai
echo "Building and installing gohai ..."
export GOPATH=${BOSH_COMPILE_TARGET}/gohai
export GOBIN=$GOPATH
export GOROOT=$(readlink -nf "${BOSH_PACKAGES_DIR}/golang")
export PATH=${GOROOT}/bin:${PATH}
pushd gohai
  go get
  go build -o gohai
  mkdir -p ${BOSH_INSTALL_TARGET}/bin
  install -m 0755 gohai ${BOSH_INSTALL_TARGET}/bin
popd

echo "Extracting Datadog Agent ${DD_AGENT_VERSION} ..."
tar xvf "dd-agent/dd-agent-${DD_AGENT_VERSION}.tar.gz"

# Install shell helpers
echo "Adding shell helpers ..."
mkdir -p ${BOSH_INSTALL_TARGET}
cp -av helpers ${BOSH_INSTALL_TARGET}/

# Install custom checks
echo "Adding custom checks ..."
mkdir -p ${BOSH_INSTALL_TARGET}
cp -av checks.d ${BOSH_INSTALL_TARGET}/

# Re-Define INSTALL folder with embedded to avoid collateral issues with other packages
AGENT_INSTALL_TARGET=${BOSH_INSTALL_TARGET}/agent
mkdir -p ${AGENT_INSTALL_TARGET}
echo "Installing Datadog Agent ..."
pushd dd-agent-${DD_AGENT_VERSION}
  cp -av * ${AGENT_INSTALL_TARGET}/
popd

echo "Setting up configuration ..."
pushd ${AGENT_INSTALL_TARGET}
  rm -rf conf.d datadog.conf
  # create the links to the configuration
  ln -s /var/vcap/jobs/dd-agent/config/conf.d conf.d
  ln -s /var/vcap/jobs/dd-agent/config/datadog.conf datadog.conf
popd

# Re-Define INSTALL folder with embedded to avoid collateral issues with other packages
REQUIREMENTS_INSTALL_TARGET=${BOSH_INSTALL_TARGET}/embedded
mkdir -p ${REQUIREMENTS_INSTALL_TARGET}

echo "Creating python site packages folder ..."
mkdir -p ${REQUIREMENTS_INSTALL_TARGET}/lib/python2.7/site-packages

echo "Setting the PYTHONPATH with setuptools and Datadog agent site packages ..."
PYTHONPATH="${REQUIREMENTS_INSTALL_TARGET}/lib/python2.7/site-packages:${PYTHONPATH}"
PYTHONPATH="${BOSH_PACKAGES_DIR}/setuptools/lib/python2.7/site-packages:${PYTHONPATH}"
PYTHONPATH="${BOSH_PACKAGES_DIR}/pip/lib/python2.7/site-packages:${PYTHONPATH}"
export PYTHONPATH

echo "Setting setuptools build sources ..."
CPATH="${BOSH_PACKAGES_DIR}/libffi/lib/libffi-3.2.1/include"
CPATH="${BOSH_PACKAGES_DIR}/libyaml/include:${CPATH}"
export CPATH
LIBRARY_PATH="${BOSH_PACKAGES_DIR}/libffi/lib"
LIBRARY_PATH="${BOSH_PACKAGES_DIR}/libyaml/lib:${LIBRARY_PATH}"
LIBRARY_PATH="${BOSH_PACKAGES_DIR}/openssl/lib:${LIBRARY_PATH}"
export LIBRARY_PATH
export LD_LIBRARY_PATH="${LIBRARY_PATH}"

pushd "dd-agent-${DD_AGENT_VERSION}"
  echo "Installing main requirements.txt ..."
  ${BOSH_PACKAGES_DIR}/pip/bin/pip install --prefix=${REQUIREMENTS_INSTALL_TARGET} --compile -r requirements.txt

  echo "Installing Datadog Agent ..."
  ${BOSH_PACKAGES_DIR}/python27/bin/python setup.py install --prefix=${REQUIREMENTS_INSTALL_TARGET}

  echo "Installing additional requirements-opt.txt ..."
  # These deps are not really needed, so we ignore failures
  PIP_COMMAND="${BOSH_PACKAGES_DIR}/pip/bin/pip" PIP_OPTIONS="--prefix=${REQUIREMENTS_INSTALL_TARGET} --compile" ./utils/pip-allow-failures.sh requirements-opt.txt
  # ${BOSH_PACKAGES_DIR}/pip/bin/pip install --prefix=${REQUIREMENTS_INSTALL_TARGET} --compile -r requirements-opt.txt
popd

